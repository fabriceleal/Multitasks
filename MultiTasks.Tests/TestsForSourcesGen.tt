<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Globalization" #>
<#@ output extension=".cs" #>
// This file was generated automatically
// Do not change it manually, otherwise you'll lose all your hard work!
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MultiTasks.RT;
using System;
using System.IO;

namespace MultiTasks.Tests
{

    [TestClass]
    public class TestsForSources
    {		
<#
		// Get Solution info
		var serviceProvider = this.Host as IServiceProvider;
		var dte = serviceProvider.GetService(typeof(DTE)) as DTE;
				
		foreach(var fname in (new DirectoryInfo(Path.Combine(Path.GetDirectoryName(dte.Solution.FullName), "MultiTasks.Tests/Examples"))).GetFiles("*.mt") ) {
#>		
		[TestMethod]
		public void Eval<#=CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Path.GetFileNameWithoutExtension(fname.FullName).Replace("_", " ").Trim()).Replace(" ", "")#>()
		{
			try 
			{				
				// Read file content (as embedded resource)
				var src = Utils.ReadSourceFileContent("<#=Path.GetFileName(fname.FullName)#>");
			
				using(FileStream str = new FileStream("<#=Path.GetFileName(fname.FullName)#>.log", FileMode.OpenOrCreate, FileAccess.Write))
				{
					
					// Compile
					var res = MtCompiler.CreateScriptApp(str).Evaluate(src) as MtResult;

					// Tests ...
					Assert.IsNotNull(res);

					// Wait for end
					res.GetValueSync((o) => { });

					// ... More tests
				}				
			} 
			catch(Exception e)
			{
				Assert.Fail(e.Message);
			}
		}

<#
		}
#>
	}

}